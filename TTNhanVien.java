/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package qlvembay;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author khanh ngu
 */
public class TTNhanVien extends javax.swing.JFrame {

    /**
     * Creates new form TTNhanVien
     */
    public TTNhanVien() {
        initComponents();
    }
    private Connection getConnect() {
        try {
        // Thay đổi thông tin kết nối theo cấu hình của bạn
        String url = "jdbc:mysql://127.0.0.1:3306/qlvemaybay";
        String user = "root";
        String password = "";

        // Tạo kết nối
        Connection connection = DriverManager.getConnection(url, user, password);

        System.out.println("Kết nối thành công đến cơ sở dữ liệu!");
        return connection;
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        return null;
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbochucvu = new javax.swing.JComboBox<>();
        txttennv = new javax.swing.JTextField();
        txtidnv = new javax.swing.JTextField();
        txtsdtnv = new javax.swing.JTextField();
        txttknv = new javax.swing.JTextField();
        txtmknv = new javax.swing.JTextField();
        btnAddnv = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbnhanvien = new javax.swing.JTable();
        btnLuunv = new javax.swing.JButton();
        btnSuanv = new javax.swing.JButton();
        btnXoanv = new javax.swing.JButton();
        btnback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(900, 500));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Thông tin nhân viên");

        jLabel2.setText("Mã nhân viên:");

        jLabel3.setText("Họ và tên:");

        jLabel4.setText("Điện thoại:");

        jLabel5.setText("Tài khoản:");

        jLabel6.setText("Mật khẩu:");

        jLabel7.setText("Chức vụ:");

        cbochucvu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý", "Nhân viên" }));

        btnAddnv.setText("Thêm");
        btnAddnv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddnvActionPerformed(evt);
            }
        });

        tbnhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Họ và tên", "Điện thoại", "Tài khoản", "Mật khẩu", "Chức vụ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbnhanvien);

        btnLuunv.setText("Lưu");
        btnLuunv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuunvActionPerformed(evt);
            }
        });

        btnSuanv.setText("Sửa");
        btnSuanv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuanvActionPerformed(evt);
            }
        });

        btnXoanv.setText("Xóa");
        btnXoanv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoanvActionPerformed(evt);
            }
        });

        btnback.setIcon(new javax.swing.ImageIcon("G:\\kien truc\\java\\back.jpg")); // NOI18N
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnLuunv)
                                .addGap(88, 88, 88)
                                .addComponent(btnAddnv)
                                .addGap(95, 95, 95)
                                .addComponent(btnSuanv)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                                .addComponent(btnXoanv))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtidnv, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(txttennv)
                                    .addComponent(txtsdtnv))
                                .addGap(93, 93, 93)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(txttknv, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbochucvu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtmknv)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(158, 158, 158))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnback))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnback)
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(txttknv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtidnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(txttennv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmknv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(cbochucvu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsdtnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddnv)
                    .addComponent(btnLuunv)
                    .addComponent(btnSuanv)
                    .addComponent(btnXoanv))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddnvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddnvActionPerformed

        try (Connection connection = getConnect()) {
        // Kiểm tra nếu kết nối thành công
        if (connection != null) {
            // Lấy thông tin từ giao diện người dùng
            String idnv = txtidnv.getText();
            String tennv = txttennv.getText();
            String chucvu = (String) cbochucvu.getSelectedItem();
            String taikhoan = txttknv.getText();
            String sdtnv = txtsdtnv.getText();
            String matkhau = txtmknv.getText();

            // Chuẩn bị câu truy vấn SQL để thêm khách hàng
            String query = "INSERT INTO nhan_vien (id,ten, dien_thoai, tai_khoan, mat_khau,chuc_vu) VALUES (?,?, ?, ?, ?, ?)";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                // Thiết lập giá trị cho các tham số trong câu truy vấn
                preparedStatement.setString(1, idnv);
                preparedStatement.setString(2, tennv);
                preparedStatement.setString(3, sdtnv);
                preparedStatement.setString(4, taikhoan);
                preparedStatement.setString(5, matkhau);
                preparedStatement.setString(6, chucvu);

                

                // Thực hiện truy vấn thêm
                int rowsAffected = preparedStatement.executeUpdate();

                if (rowsAffected > 0) {
                    System.out.println("Thêm khách hàng thành công!");
                    updateTable();
                } else {
                    System.out.println("Thêm khách hàng thất bại!");
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn thêm: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
        clearInputFields();
               // TODO add your handling code here:
    }//GEN-LAST:event_btnAddnvActionPerformed

    private void btnLuunvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuunvActionPerformed
        int selectedRowIndex = tbnhanvien.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Get the values from the input fields
            String idnv = txtidnv.getText();
            String tennv = txttennv.getText();
            String chucvu = (String) cbochucvu.getSelectedItem();
            String taikhoan = txttknv.getText();
            String sdtnv = txtsdtnv.getText();
            String matkhau = txtmknv.getText();

        try (Connection connection = getConnect()) {
            // Check if the connection is successful
            if (connection != null) {
                // Prepare the SQL UPDATE query to update employee information
                String query = "UPDATE nhan_vien SET ten = ?, dien_thoai = ?, tai_khoan = ?, mat_khau = ?, chuc_vu = ? WHERE id = ?";

                try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                    // Set the parameter values in the UPDATE query
                    
                    preparedStatement.setString(1, tennv);
                    preparedStatement.setString(2, sdtnv);
                    preparedStatement.setString(3, taikhoan);
                    preparedStatement.setString(4, matkhau);
                    preparedStatement.setString(5, chucvu);
                    preparedStatement.setString(6, idnv);
                    // Execute the UPDATE query
                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        System.out.println("Cập nhật thông tin nhân viên thành công!");
                        // After successful update, update the table
                        updateTable2();
                        // Clear the input fields after saving
                        clearInputFields();
                    } else {
                        System.out.println("Không tìm thấy nhân viên để cập nhật!");
                    }
                } catch (SQLException ex) {
                    System.err.println("Lỗi thực hiện truy vấn cập nhật: " + ex.getMessage());
                }
            }
        } catch (SQLException ex) {
            System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        }
    } else {
        System.out.println("Vui lòng chọn một dòng để cập nhật!");
    }        // TODO add your handling code here:
    }//GEN-LAST:event_btnLuunvActionPerformed

    private void btnXoanvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoanvActionPerformed
        int selectedRow = tbnhanvien.getSelectedRow();

    if (selectedRow == -1) {
        // No row selected
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhân viên để xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    String idToDelete = tbnhanvien.getValueAt(selectedRow, 0).toString(); // Assuming the employee ID is in the first column

    int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa nhân viên này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
    
    if (option == JOptionPane.YES_OPTION) {
        try (Connection connection = getConnect()) {
            // Check if the connection is successful
            if (connection != null) {
                // Prepare the SQL DELETE query
                String deleteQuery = "DELETE FROM nhan_vien WHERE id = ?";

                try (PreparedStatement preparedStatement = connection.prepareStatement(deleteQuery)) {
                    // Set the parameter in the DELETE query
                    preparedStatement.setString(1, idToDelete);

                    // Execute the DELETE query
                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        System.out.println("Xóa nhân viên thành công!");
                        updateTable2(); // Update the table after deletion
                    } else {
                        System.out.println("Không tìm thấy nhân viên có ID: " + idToDelete);
                    }
                } catch (SQLException ex) {
                    System.err.println("Lỗi thực hiện truy vấn xóa: " + ex.getMessage());
                }
            }
        } catch (SQLException ex) {
            System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        }
    }        // TODO add your handling code here:
    }//GEN-LAST:event_btnXoanvActionPerformed

    private void btnSuanvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuanvActionPerformed
        int selectedRowIndex = tbnhanvien.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Get the values from the selected row
        String id = tbnhanvien.getValueAt(selectedRowIndex, 0).toString();
        String tennv = tbnhanvien.getValueAt(selectedRowIndex, 1).toString();
        String sdtnv = tbnhanvien.getValueAt(selectedRowIndex, 2).toString();
        String taikhoan = tbnhanvien.getValueAt(selectedRowIndex, 3).toString();
        String matkhau = tbnhanvien.getValueAt(selectedRowIndex, 4).toString();
        String chucvu = tbnhanvien.getValueAt(selectedRowIndex, 5).toString();
        
        // Fill the input fields with the selected data

        txtidnv.setText(id);
        txttennv.setText(tennv);
        txtsdtnv.setText(sdtnv);
        txttknv.setText(taikhoan);       
        txtmknv.setText(matkhau);
        cbochucvu.setSelectedItem(chucvu);
    } else {
        System.out.println("Vui lòng chọn một dòng để sửa!");
    }        // TODO add your handling code here:
    }//GEN-LAST:event_btnSuanvActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        Menu mn = new Menu();
        mn.setVisible(true);

        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_btnbackActionPerformed

    
        public void updateTable2() {
    try (Connection connection = getConnect()) {
        // Kiểm tra nếu kết nối thành công
        if (connection != null) {
            // Chuẩn bị câu truy vấn SQL để lấy dữ liệu từ bảng nhanvien
            String query = "SELECT * FROM nhan_vien";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {

                // Xóa dữ liệu hiện tại trong bảng
                DefaultTableModel model = (DefaultTableModel) tbnhanvien.getModel();
                model.setRowCount(0);

                // Duyệt qua kết quả và thêm vào bảng
                while (resultSet.next()) {
                    String idnv  = resultSet.getString("id");
                    String tennv = resultSet.getString("ten");
                    String sdtnv = resultSet.getString("dien_thoai");
                    String taikhoan = resultSet.getString("tai_khoan");
                    String matkhau = resultSet.getString("mat_khau");
                    String chucvu = resultSet.getString("chuc_vu");


                    model.addRow(new Object[]{idnv, tennv, sdtnv, taikhoan, matkhau,chucvu });
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
}
    
    
        private void clearInputFields() {
    // Xóa nội dung trong các trường nhập liệu
txtidnv.setText("");
txttennv.setText("");
cbochucvu.setSelectedItem(0);
txttknv.setText("");
txtsdtnv.setText("");
txtmknv.setText("");
    
}
    public void updateTable() {
        try (Connection connection = getConnect()) {
//         Kiểm tra nếu kết nối thành công
            if (connection != null) {
            // Chuẩn bị câu truy vấn SQL để lấy dữ liệu từ bảng khachhang
                String query = "SELECT * FROM nhan_vien";

                try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                     ResultSet resultSet = preparedStatement.executeQuery()) {

                // Xóa dữ liệu hiện tại trong bảng
                    DefaultTableModel model = (DefaultTableModel) tbnhanvien.getModel();
                    model.setRowCount(0);

                // Duyệt qua kết quả và thêm vào bảng
                    while (resultSet.next()) {
                        String idnv  = resultSet.getString("id");
                        String tennv = resultSet.getString("ten");
                        String sdtnv = resultSet.getString("dien_thoai");
                        String taikhoan = resultSet.getString("tai_khoan");
                        String matkhau = resultSet.getString("mat_khau");
                        String chucvu = resultSet.getString("chuc_vu");

                        model.addRow(new Object[]{idnv, tennv,sdtnv, taikhoan, matkhau, chucvu});
                    }
            }   catch (SQLException ex) {
                    System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TTNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TTNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TTNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TTNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            TTNhanVien form = new TTNhanVien();
            
            // Gọi phương thức updateTable ngay sau khi khởi tạo
                form.updateTable();
                form.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddnv;
    private javax.swing.JButton btnLuunv;
    private javax.swing.JButton btnSuanv;
    private javax.swing.JButton btnXoanv;
    private javax.swing.JButton btnback;
    private javax.swing.JComboBox<String> cbochucvu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbnhanvien;
    private javax.swing.JTextField txtidnv;
    private javax.swing.JTextField txtmknv;
    private javax.swing.JTextField txtsdtnv;
    private javax.swing.JTextField txttennv;
    private javax.swing.JTextField txttknv;
    // End of variables declaration//GEN-END:variables
}
