/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package qlvembay;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khanh ngu
 */
public class TaoVeMoi extends javax.swing.JFrame {

    /**
     * Creates new form TaoVeMoi
     */
    public TaoVeMoi() {
        initComponents();
    }
    private Connection getConnect() {
        try {
        // Thay đổi thông tin kết nối theo cấu hình của bạn
        String url = "jdbc:mysql://127.0.0.1:3306/qlvemaybay";
        String user = "root";
        String password = "";

        // Tạo kết nối
        Connection connection = DriverManager.getConnection(url, user, password);

        System.out.println("Kết nối thành công đến cơ sở dữ liệu!");
        return connection;
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        return null;
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cbohangbay = new javax.swing.JComboBox<>();
        txtidve = new javax.swing.JTextField();
        txtngaydat = new javax.swing.JTextField();
        txtdiemdi = new javax.swing.JTextField();
        txtngaybay = new javax.swing.JTextField();
        txtdiemden = new javax.swing.JTextField();
        txtgiobay = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbvemoi = new javax.swing.JTable();
        btnAddve = new javax.swing.JButton();
        btnLuuve = new javax.swing.JButton();
        btnXoave = new javax.swing.JButton();
        btnSuave = new javax.swing.JButton();
        cboidkh = new javax.swing.JComboBox<>();
        cboidnv = new javax.swing.JComboBox<>();
        btnback = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Tạo vé mới");

        jLabel2.setText("Mã vé:");

        jLabel3.setText("Mã nhân viên:");

        jLabel4.setText("Mã khách hàng:");

        jLabel5.setText("Ngày đặt:");

        jLabel6.setText("Hãng bay:");

        jLabel7.setText("Điểm đi:");

        jLabel8.setText("Điểm đến:");

        jLabel9.setText("Ngày bay:");

        jLabel10.setText("Giờ bay:");

        cbohangbay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vietnam Airlines", "VietJet Air", "Bamboo Airways" }));

        tbvemoi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "ID khách hàng", "ID nhân viên", "Hãng bay", "Ngày đặt vé", "Điểm đi", "Điểm đến", "Ngày bay", "Giờ bay"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbvemoi);

        btnAddve.setText("Tạo");
        btnAddve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddveActionPerformed(evt);
            }
        });

        btnLuuve.setText("Lưu");
        btnLuuve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuveActionPerformed(evt);
            }
        });

        btnXoave.setText("Hủy");
        btnXoave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaveActionPerformed(evt);
            }
        });

        btnSuave.setText("Sửa");
        btnSuave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaveActionPerformed(evt);
            }
        });

        btnback.setIcon(new javax.swing.ImageIcon("G:\\kien truc\\java\\back.jpg")); // NOI18N
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(btnLuuve)
                .addGap(119, 119, 119)
                .addComponent(btnSuave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddve)
                .addGap(112, 112, 112)
                .addComponent(btnXoave)
                .addGap(145, 145, 145))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtidve)
                                    .addComponent(txtdiemdi, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                    .addComponent(txtngaybay)
                                    .addComponent(cboidkh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(95, 95, 95)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtngaydat)
                                    .addComponent(txtdiemden, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                    .addComponent(txtgiobay)
                                    .addComponent(cboidnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cbohangbay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnback)
                        .addGap(290, 290, 290)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnback)))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtidve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboidnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtngaydat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboidkh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbohangbay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(txtdiemdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdiemden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(txtngaybay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtgiobay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddve)
                    .addComponent(btnLuuve)
                    .addComponent(btnXoave)
                    .addComponent(btnSuave))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddveActionPerformed
        try (Connection connection = getConnect()) {
        // Kiểm tra nếu kết nối thành công
        if (connection != null) {
            // Lấy thông tin từ giao diện người dùng
            String idve = txtidve.getText();
            String idkh = (String) cboidkh.getSelectedItem();
            String idnv = (String) cboidnv.getSelectedItem();
            String ngaydat = txtngaydat.getText();
            String hangbay = (String) cbohangbay.getSelectedItem();            
            String diemdi = txtdiemdi.getText();
            String diemden = txtdiemden.getText();
            String ngaybay = txtngaybay.getText();
            String giobay = txtgiobay.getText();

            // Chuẩn bị câu truy vấn SQL để thêm khách hàng
            String query = "INSERT INTO ve_dat (id, id_khach_hang, id_nhan_vien, ngay_dat, hang_bay, diem_di, diem_den, ngay_bay, gio_bay) VALUES (?,?,?,?,?, ?, ?, ?, ?)";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                // Thiết lập giá trị cho các tham số trong câu truy vấn
                preparedStatement.setString(1, idve);
                preparedStatement.setString(2, idkh);
                preparedStatement.setString(3, idnv);
                preparedStatement.setString(4, ngaydat);
                preparedStatement.setString(5, hangbay);
                
                preparedStatement.setString(6, diemdi);
                preparedStatement.setString(7, diemden);
                preparedStatement.setString(8, ngaybay);
                preparedStatement.setString(9, giobay);

                

                // Thực hiện truy vấn thêm
                int rowsAffected = preparedStatement.executeUpdate();

                if (rowsAffected > 0) {
                    System.out.println("Thêm khách hàng thành công!");
                    updateTable();
                } else {
                    System.out.println("Thêm khách hàng thất bại!");
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn thêm: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
        clearInputFields();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddveActionPerformed

    private void btnLuuveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuveActionPerformed
        int selectedRowIndex = tbvemoi.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Get the values from the input fields
            String idve = txtidve.getText();
            String idkh = (String) cboidkh.getSelectedItem();
            String idnv = (String) cboidnv.getSelectedItem();
            String ngaydat = txtngaydat.getText();
            String hangbay = (String) cbohangbay.getSelectedItem();                       
            String diemdi = txtdiemdi.getText();
            String diemden = txtdiemden.getText();
            String ngaybay = txtngaybay.getText();
            String giobay = txtgiobay.getText();
        try (Connection connection = getConnect()) {
            // Kiểm tra nếu kết nối thành công
            if (connection != null) {
                // Chuẩn bị câu truy vấn SQL để cập nhật thông tin khách hàng
                String query = "UPDATE ve_dat SET id_khach_hang = ?,id_nhan_vien  = ?, ngay_dat = ?, hang_bay = ?, diem_di = ?, diem_den = ?, ngay_bay = ?, gio_bay = ? WHERE id = ?";

                try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                    // Thiết lập giá trị cho các tham số trong câu truy vấn
                    
                    preparedStatement.setString(1, idkh);
                    preparedStatement.setString(2, idnv);
                    preparedStatement.setString(3, ngaydat);
                    preparedStatement.setString(4, hangbay);
                    preparedStatement.setString(5, diemdi);
                    preparedStatement.setString(6, diemden);
                    preparedStatement.setString(7, ngaybay);
                    preparedStatement.setString(8, giobay);
                    preparedStatement.setString(9, idve);

                    // Thực hiện truy vấn cập nhật
                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        System.out.println("Cập nhật thông tin khách hàng thành công!");
                        // Sau khi cập nhật thành công, cập nhật lại bảng
                        updateTable();
                        // Xóa nội dung trong các trường nhập liệu sau khi lưu
                        clearInputFields();
                    } else {
                        System.out.println("Không tìm thấy khách hàng để cập nhật!");
                    }
                } catch (SQLException ex) {
                    System.err.println("Lỗi thực hiện truy vấn cập nhật: " + ex.getMessage());
                }
            }
        } catch (SQLException ex) {
            System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        }
    } else {
        System.out.println("Vui lòng chọn một dòng để cập nhật!");
    }        // TODO add your handling code here:
    }//GEN-LAST:event_btnLuuveActionPerformed

    
    public void populateComboBoxKhachHang() {
    try (Connection connection = getConnect()) {
        if (connection != null) {
            String query = "SELECT id FROM khach_hang";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {
                while (resultSet.next()) {
                    String idkh = resultSet.getString("id");
                    cboidkh.addItem(idkh);
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
}

    public void populateComboBoxNhanVien() {
    try (Connection connection = getConnect()) {
        if (connection != null) {
            String query = "SELECT id FROM nhan_vien";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {
                while (resultSet.next()) {
                    String idnv = resultSet.getString("id");
                    cboidnv.addItem(idnv); // Thêm mỗi mã phòng vào ComboBox
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
}
    
    private void btnXoaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaveActionPerformed
        int selectedRow = tbvemoi.getSelectedRow();

    if (selectedRow == -1) {
        // No row selected
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một vé để hủy.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    String idToDelete = tbvemoi.getValueAt(selectedRow, 0).toString(); // Assuming the employee ID is in the first column

    int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn hủy vé  này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
    
    if (option == JOptionPane.YES_OPTION) {
        try (Connection connection = getConnect()) {
            // Check if the connection is successful
            if (connection != null) {
                // Prepare the SQL DELETE query
                String deleteQuery = "DELETE FROM ve_dat WHERE id = ?";

                try (PreparedStatement preparedStatement = connection.prepareStatement(deleteQuery)) {
                    // Set the parameter in the DELETE query
                    preparedStatement.setString(1, idToDelete);

                    // Execute the DELETE query
                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        System.out.println("Xóa nhân viên thành công!");
                        updateTable(); // Update the table after deletion
                    } else {
                        System.out.println("Không tìm thấy nhân viên có ID: " + idToDelete);
                    }
                } catch (SQLException ex) {
                    System.err.println("Lỗi thực hiện truy vấn xóa: " + ex.getMessage());
                }
            }
        } catch (SQLException ex) {
            System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        }
    }            // TODO add your handling code here:
    }//GEN-LAST:event_btnXoaveActionPerformed

    private void btnSuaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaveActionPerformed
        int selectedRowIndex = tbvemoi.getSelectedRow();

    if (selectedRowIndex != -1) {
        // Get the values from the selected row
        String idve = tbvemoi.getValueAt(selectedRowIndex, 0).toString();
        String idkh = tbvemoi.getValueAt(selectedRowIndex, 1).toString();
        String idnv = tbvemoi.getValueAt(selectedRowIndex, 2).toString();
        String ngaydat = tbvemoi.getValueAt(selectedRowIndex, 3).toString();
        String hangbay = tbvemoi.getValueAt(selectedRowIndex, 4).toString();
        String diemdi = tbvemoi.getValueAt(selectedRowIndex, 5).toString();
        String diemden = tbvemoi.getValueAt(selectedRowIndex, 6).toString();
        String ngaybay = tbvemoi.getValueAt(selectedRowIndex, 7).toString();
        String giobay = tbvemoi.getValueAt(selectedRowIndex, 8).toString();

        // Fill the input fields with the selected data
        txtidve.setText(idve);
        cboidkh.setSelectedItem(idkh);
        cboidnv.setSelectedItem(idnv);
        cbohangbay.setSelectedItem(hangbay);            
        txtngaydat.setText(ngaydat);
        txtdiemdi.setText(diemdi);
        txtdiemden.setText(diemden);
        txtngaybay.setText(ngaybay);
        txtgiobay.setText(giobay); 
    
    } else {
        System.out.println("Vui lòng chọn một dòng để sửa!");
    }        // TODO add your handling code here:
    }//GEN-LAST:event_btnSuaveActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        Menu mn = new Menu();
        mn.setVisible(true);

        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_btnbackActionPerformed
    
    private void clearInputFields() {
    // Xóa nội dung trong các trường nhập liệu
txtidve.setText("");
cboidkh.setSelectedItem(0);
cboidnv.setSelectedItem(0);
cbohangbay.setSelectedItem(0);            
txtngaydat.setText("");
txtdiemdi.setText("");
txtdiemden.setText("");
txtngaybay.setText("");
txtgiobay.setText(""); 
    
}
    public void updateTable() {
        try (Connection connection = getConnect()) {
//         Kiểm tra nếu kết nối thành công
            if (connection != null) {
            // Chuẩn bị câu truy vấn SQL để lấy dữ liệu từ bảng khachhang
                String query = "SELECT * FROM ve_dat";

                try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                     ResultSet resultSet = preparedStatement.executeQuery()) {

                // Xóa dữ liệu hiện tại trong bảng
                    DefaultTableModel model = (DefaultTableModel) tbvemoi.getModel();
                    model.setRowCount(0);

                // Duyệt qua kết quả và thêm vào bảng
                    while (resultSet.next()) {
                        String idve  = resultSet.getString("id");
                        String idkh = resultSet.getString("id_khach_hang");
                        String idnv = resultSet.getString("id_nhan_vien");
                        String ngaydat = resultSet.getString("ngay_dat");
                        String hangbay = resultSet.getString("hang_bay");
                        String diemdi = resultSet.getString("diem_di");
                        String diemden = resultSet.getString("diem_den");
                        String ngaybay = resultSet.getString("ngay_bay");
                        String giobay = resultSet.getString("gio_bay");

                        model.addRow(new Object[]{idve, idkh, idnv, ngaydat, hangbay,diemdi, diemden,ngaybay,giobay});
                    }
            }   catch (SQLException ex) {
                    System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
    } catch (SQLException ex) {
        System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaoVeMoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaoVeMoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaoVeMoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaoVeMoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TaoVeMoi form = new TaoVeMoi();
            
            // Gọi phương thức updateTable ngay sau khi khởi tạo
                form.updateTable();
                form.populateComboBoxKhachHang();
                form.populateComboBoxNhanVien();
                form.setVisible(true);
            
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddve;
    private javax.swing.JButton btnLuuve;
    private javax.swing.JButton btnSuave;
    private javax.swing.JButton btnXoave;
    private javax.swing.JButton btnback;
    private javax.swing.JComboBox<String> cbohangbay;
    private javax.swing.JComboBox<String> cboidkh;
    private javax.swing.JComboBox<String> cboidnv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tbvemoi;
    private javax.swing.JTextField txtdiemden;
    private javax.swing.JTextField txtdiemdi;
    private javax.swing.JTextField txtgiobay;
    private javax.swing.JTextField txtidve;
    private javax.swing.JTextField txtngaybay;
    private javax.swing.JTextField txtngaydat;
    // End of variables declaration//GEN-END:variables
}
